name: Check firmware update

on:
  workflow_dispatch:
    inputs:
      MODEL:
        description: 'MODEL'
        required: true
        default: 'SM-S908E'
      REGION:
        description: 'REGION'
        required: true
        default: 'MID'

jobs:
  update:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      max-parallel: 2

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Compare latest version with current version
        id: check
        run: |
          need_update=0
          latest=`curl --retry 5 --retry-delay 5 http://fota-cloud-dn.ospserver.net/firmware/${{ github.event.inputs.REGION }}/${{ github.event.inputs.MODEL }}/version.xml | grep latest | sed 's/^[^>]*>//' | sed 's/<.*//'`
          latest_short=`echo $latest | cut -d'/' -f1`
          latest_csc=`echo $latest | cut -d'/' -f2`
          latest_modem=`echo $latest | cut -d'/' -f3`
          current=`cat current.${{ github.event.inputs.MODEL }}` || need_update=1
          [[ $latest != $current ]] && need_update=1
          echo "latest_version=$latest" >> $GITHUB_ENV
          echo "latest_shortversion=$latest_short" >> $GITHUB_ENV
          echo "latest_cscversion=$latest_csc" >> $GITHUB_ENV
          echo "latest_modemversion=$latest_modem" >> $GITHUB_ENV
          echo "need_update=$need_update" >> $GITHUB_ENV

      - name: Install dependencies
        if: env.need_update == 1
        run: |
          sudo apt-get update
          sudo apt-get install -y liblz4-tool zip
          sudo wget -O /usr/bin/unpackbootimg https://corsica.nu/unpackbootimg && sudo chmod +x /usr/bin/unpackbootimg
          sudo wget -O /usr/bin/extract-ikconfig https://corsica.nu/extract-ikconfig && sudo chmod +x /usr/bin/extract-ikconfig
          sudo wget -O /usr/bin/samfirm https://github.com/jesec/SamFirm.NET/releases/latest/download/linux-x64 && sudo chmod +x /usr/bin/samfirm
          aikurl=$(wget -qO- "https://forum.xda-developers.com/showthread.php?t=2073775" | cat | grep "AIK-Linux-v" | cut -d'"' -f2 | grep http | head -1)
          sudo wget -O aik.tar.gz "$aikurl" && tar xvf aik.tar.gz && sudo mv AIK-Linux/* /usr/bin/ && rm -rf AIK-Linux

      - name: Fetch firmware
        if: env.need_update == 1
        run: samfirm -m ${{ github.event.inputs.MODEL }} -r ${{ github.event.inputs.REGION }}

      - name: Print directory structure
        if: env.need_update == 1
        run: ls -la ${{ github.event.inputs.MODEL }}_${{ github.event.inputs.REGION }}

      - name: Get path of files
        if: env.need_update == 1
        id: files
        run: |
          echo "ap=`find -name AP*`" >> $GITHUB_ENV
          echo "csc=`find -name HOME_CSC*`" >> $GITHUB_ENV

      - name: Check downloaded firmware version
        if: env.need_update == 1
        run: |
          version_short=`echo ${{ env.ap }} | cut -d'_' -f3`
          version_csc=`echo ${{ env.csc }} | cut -d'_' -f5`
          [[ $version_short == ${{ env.latest_shortversion }} ]] && echo PDA version: $version_short >> versions.txt
          [[ $version_csc == ${{ env.latest_cscversion }} ]] && echo CSC version: $version_csc >> versions.txt

      - name: Print available disk space
        if: env.need_update == 1
        run: |
          pwd
          sudo df -h
          
      - name: Create zip environment
        if: env.need_update == 1
        run: |
          target_device=`echo ${{ github.event.inputs.MODEL }} | cut -d'-' -f2`
          target_version=${{ env.latest_shortversion }}
          mkdir -p miscs/ramdisk/system/etc tmp
          
      - name: Extract images/files from AP, dump miscs and create zips
        if: env.need_update == 1
        id: releases
        run: |
          target_version=${{ env.latest_shortversion }}
          tar xvf ${{ env.ap }} meta-data/fota.zip --strip-components=1
          [[ -e fota.zip ]] && unzip -P fotatest1234 -j fota.zip META/misc_info.txt -d miscs
          tar xvf ${{ env.ap }} --wildcards --no-anchored 'recovery.img*' 'boot.img*'
          [[ -e recovery.img.lz4 ]] && lz4 -dm recovery.img.lz4
          [[ -e recovery.img.lz4 ]] && lz4_extension=".lz4" || lz4_extension=""
          extract-ikconfig recovery.img > miscs/${{ github.event.inputs.MODEL }}_defconfig
          cd tmp
          unpackbootimg -i ../recovery.img >> ../miscs/recoveryimg.args
          unpackimg.sh --local --nosudo ../recovery.img
          [[ -e recovery.img-dtb ]] && cp recovery.img-dtb ../miscs/dtb
          [[ -e recovery.img-recovery_dtbo ]] && cp recovery.img-recovery_dtbo ../miscs/recovery_dtbo
          cd ramdisk
          rdsk=(*.rc prop.default lib system/etc/recovery.fstab system/etc/ueventd.rc vendor)
          for i in ${rdsk[@]}; do [[ -e $i ]] && cp -r $i ../../miscs/ramdisk/$i; done
          cd ../../miscs
          zip -r ../$target_version-miscs.zip *
          cd ..
          mv boot.img$lz4_extension $target_version-stock_boot.img$lz4_extension
          mv recovery.img$lz4_extension $target_version-stock_recovery.img$lz4_extension
          ls
          echo "boot=`find -name $target_version-stock_boot.img$lz4_extension`" >> $GITHUB_ENV
          echo "recovery=`find -name $target_version-stock_recovery.img$lz4_extension`" >> $GITHUB_ENV
          echo "miscs=`find -name $target_version-miscs.zip`" >> $GITHUB_ENV

      - name: Update current version
        if: env.need_update == 1
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull origin ${{github.ref}} --ff-only
          echo ${{ env.latest_version }} > current.${{ github.event.inputs.MODEL }}
          git add current.${{ github.event.inputs.MODEL }}
          git commit -m "${{ github.event.inputs.MODEL }}: ${{ env.latest_version }}"
          git tag ${{ env.latest_shortversion }}

      - name: Push changes to repo
        if: env.need_update == 1
        uses: ad-m/github-push-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tags: true

      - name: Upload release assets
        if: env.need_update == 1
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          body_path: versions.txt
          tag_name: ${{ env.latest_shortversion }}
          files: |
            ${{ env.boot }}
            ${{ env.recovery }}
            ${{ env.miscs }}
